<?xml version="1.0" encoding="UTF-8"?>

<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!--
    Ignite server configuration file: TODOs mark the sections that can or must be adapted
    to the server- and cluster-specific characteristics (such as IPs, IP-Mappings, RAM, ...)

    Configuration for
        - term set size of 2500 terms
        - precalculated clustering ("clustering/clustering2500")
        - materialized fragments approach
        - with clustering cache & SQL TOP 1 query and the similarity cache
-->
<!--suppress ALL -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="ignite.cfg" class="org.apache.ignite.configuration.IgniteConfiguration">

        <!-- Enable peer class loading -->
        <property name="peerClassLoadingEnabled" value="true"/>

        <!-- Failure detection timeout -->
        <property name="failureDetectionTimeout" value="30000"/>

        <!-- Redefining maximum memory size for the cluster node usage. -->
        <property name="dataStorageConfiguration">
            <!-- TODO -->
            <bean class="org.apache.ignite.configuration.DataStorageConfiguration">
                <!-- Data region config -->
                <property name="defaultDataRegionConfiguration">
                    <bean class="org.apache.ignite.configuration.DataRegionConfiguration">
                        <!-- Set the size of the default region to 6GB (of 8GB). -->
                        <property name="maxSize" value="#{6L * 1024 * 1024 * 1024}"/>

                        <!-- Enable metrics for this data region  -->
                        <property name="metricsEnabled" value="true"/>
                    </bean>
                </property>

                <!-- Set the page size to 4 KB (=server page size)-->
                <property name="pageSize" value="#{4 * 1024}"/>
            </bean>
        </property>

        <!-- Explicitly configure TCP discovery SPI to provide list of initial nodes. -->
        <property name="discoverySpi">
            <!-- TODO -->
            <bean class="org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi">
                <!-- Local ports configuration -->
                <property name="localPort" value="47500"/>
                <property name="localPortRange" value="10"/>

                <!-- IP finder for this cluster (note: server's own local IPs are present) -->
                <property name="ipFinder">
                    <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder">
                        <property name="addresses">
                            <list>
                                <!-- Local IP addresses of GWDG cloud servers. -->
                                <value>10.254.1.5:47500..47509</value>
                                <value>10.254.1.6:47500..47509</value>
                                <value>10.254.1.7:47500..47509</value>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>

        <!-- Overwrite local ports -->
        <property name="communicationSpi">
            <!-- TODO -->
            <bean class="org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi">
                <!-- Override local port. -->
                <property name="localPort" value="47100"/>
                <property name="localPortRange" value="10"/>
                <property name="usePairedConnections" value="true"/>
            </bean>
        </property>

        <!-- Address resolver: map local IP addresses to public IP addresses-->
        <property name="addressResolver">
            <!-- TODO -->
            <bean class="org.apache.ignite.configuration.BasicAddressResolver">
                <constructor-arg>
                    <map>
                        <entry key="10.254.1.5" value="141.5.107.8"/>
                        <entry key="10.254.1.6" value="141.5.107.75"/>
                        <entry key="10.254.1.7" value="141.5.107.76"/>
                    </map>
                </constructor-arg>
            </bean>
        </property>


        <!-- Cache TEMPLATE configurations (will be created with sql CREATE TABLE then) -->
        <property name="cacheConfiguration">
            <list>
                <bean id="cache-template-bean" abstract="true"
                      class="org.apache.ignite.configuration.CacheConfiguration">
                    <!-- Template for fragment tables -->
                    <property name="name" value="illFragmentTemplate*"/>
                    <property name="cacheMode" value="PARTITIONED"/>
                    <property name="backups" value="0"/>
                    <property name="affinity">
                        <ref bean="affinityFunction"/>
                    </property>
                    <property name="keyConfiguration">
                        <list>
                            <bean class="org.apache.ignite.cache.CacheKeyConfiguration">
                                <property name="typeName" value="materializedfragments.IllKey"/>
                                <property name="affinityKeyFieldName" value="key"/>
                            </bean>
                        </list>
                    </property>
                    <property name="statisticsEnabled" value="true"/>
                </bean>

                <bean id="cache-template-bean" abstract="true"
                      class="org.apache.ignite.configuration.CacheConfiguration">
                    <property name="name" value="infoTemplate*"/>
                    <property name="cacheMode" value="PARTITIONED"/>
                    <property name="backups" value="0"/>
                    <property name="affinity">
                        <ref bean="affinityFunction"/>
                    </property>
                    <property name="keyConfiguration">
                        <list>
                            <bean class="org.apache.ignite.cache.CacheKeyConfiguration">
                                <property name="typeName" value="materializedfragments.FragIDKey"/>
                                <property name="affinityKeyFieldName" value="key"/>
                            </bean>
                        </list>
                    </property>

                    <property name="statisticsEnabled" value="true"/>
                </bean>

                <bean id="cache-template-bean" abstract="true"
                      class="org.apache.ignite.configuration.CacheConfiguration">
                    <property name="name" value="treatTemplate*"/>
                    <property name="cacheMode" value="PARTITIONED"/>
                    <property name="backups" value="0"/>
                    <property name="affinity">
                        <ref bean="affinityFunction"/>
                    </property>
                    <property name="keyConfiguration">
                        <list>
                            <bean class="org.apache.ignite.cache.CacheKeyConfiguration">
                                <property name="typeName" value="materializedfragments.FragIDKey"/>
                                <property name="affinityKeyFieldName" value="key"/>
                            </bean>
                        </list>
                    </property>
                    <property name="statisticsEnabled" value="true"/>
                </bean>

                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <property name="name" value="SIM"/>
                    <property name="cacheMode" value="REPLICATED"/>
                    <property name="backups" value="0"/>
                    <property name="sqlSchema" value="PUBLIC"/>
                    <property name="queryEntities">
                        <list>
                            <bean class="org.apache.ignite.cache.QueryEntity">
                                <property name="tableName" value="SIM"/>

                                <!-- Key type is string (the concatenation term1+term2)-->
                                <property name="keyType" value="java.lang.String"/>

                                <!-- Value type is double (the similarity value) and SQL name is "simvalue" -->
                                <property name="valueType" value="clusteringbasedfragmentation.Similarity"/>

                                <!-- Defining fields that will be either indexed or queryable.
                                        Indexed fields are added to 'indexes' list below.-->
                                <property name="fields">
                                    <map>
                                        <entry key="term1" value="java.lang.String"/>
                                        <entry key="term2" value="java.lang.String"/>
                                        <entry key="simvalue" value="java.lang.Double"/>
                                    </map>
                                </property>

                                <!-- Defining indexed fields.-->
                                <property name="indexes">
                                    <list>
                                        <!-- Single field (aka. column) index -->
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="term1"></constructor-arg>
                                            <!-- Inline size of the index -->
                                            <property name="inlineSize" value="90"/>
                                        </bean>

                                        <!-- Single field (aka. column) index -->
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="term2"></constructor-arg>
                                            <!-- Inline size of the index -->
                                            <property name="inlineSize" value="90"/>
                                        </bean>

                                        <!-- Group index multi-field index -->
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg>
                                                <list>
                                                    <value>term1</value>
                                                    <value>term2</value>
                                                </list>
                                            </constructor-arg>
                                            <!-- Inline size of the index -->
                                            <property name="inlineSize" value="200"/>
                                            <constructor-arg value="SORTED"/>
                                        </bean>
                                    </list>
                                </property>
                            </bean>
                        </list>
                    </property>
                    <!-- Cache Store Factory: Load pathlengths initially from provided csv file -->
                    <property name="cacheStoreFactory">
                        <bean class="clusteringbasedfragmentation.SimilarityCacheStoreFactory">
                            <property name="pathLengthCSV" value="#{systemProperties['IGNITE_HOME']}/libs/csv/pathlengths2500.csv"/>
                            <property name="simTableSimilarity">
                                <ref bean="simFunc"/>
                            </property>
                        </bean>
                    </property>

                    <property name="readThrough" value="true"/>
                    <property name="writeThrough" value="true"/>
                    <property name="writeBehindEnabled" value="false"/>
                </bean>


                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <property name="name" value="CLUSTERING"/>
                    <property name="cacheMode" value="REPLICATED"/>
                    <property name="backups" value="0"/>
                    <property name="sqlSchema" value="PUBLIC"/>
                    <property name="queryEntities">
                        <list>
                            <bean class="org.apache.ignite.cache.QueryEntity">
                                <property name="tableName" value="CLUSTERING"/>

                                <!-- Key type is integer (the cluster's id) and the name in SQL is "id"-->
                                <property name="keyType" value="java.lang.Integer"/>
                                <property name="keyFieldName" value="id"/>
                                <!-- Value type is string (the cluster's head term) and SQL name is "head" -->
                                <property name="valueType" value="java.lang.String"/>
                                <property name="valueFieldName" value="head"/>

                                <!-- Defining fields that will be either indexed or queryable.-->
                                <property name="fields">
                                    <map>
                                        <entry key="id" value="java.lang.Integer"/>
                                        <entry key="head" value="java.lang.String"/>
                                    </map>
                                </property>

                            </bean>
                        </list>
                    </property>

                    <!-- Cache Store Factory: Load pathlengths initially from provided csv file -->
                    <property name="cacheStoreFactory">
                        <bean class="clusteringbasedfragmentation.ClusteringCacheStoreFactory">
                            <property name="clusteringFile" value="#{systemProperties['IGNITE_HOME']}/libs/clustering/clustering2500"/>
                        </bean>
                    </property>

                    <property name="readThrough" value="true"/>
                    <property name="writeThrough" value="true"/>
                    <property name="writeBehindEnabled" value="false"/>
                </bean>

            </list>
        </property>

    </bean>


    <bean id="affinityFunction" class="clusteringbasedfragmentation.ClusteringAffinityFunction">
        <constructor-arg name="similarityFunction">
            <ref bean="simFunc"/>
        </constructor-arg>
        <constructor-arg name="clusteringFile" value="#{systemProperties['IGNITE_HOME']}/libs/clustering/clustering2500"/>
    </bean>

    <bean id="simFunc" class="clusteringbasedfragmentation.similarityfunctions.SimClusteringTableSimilarity">
        <constructor-arg name="simCacheName" value="SIM"/>
        <constructor-arg name="isLocal" value="true"/>
        <constructor-arg name="clusteringCacheName" value="CLUSTERING"/>
        <!-- identifyClusterEnabled == true means that the method to identify the most similar cluster
             by an SQL TOP 1 query is enabled. This method must be enabled if the clustering cache is
             initialized and used!
         -->
        <constructor-arg name="identifyClusterEnabled" value="true"/>
    </bean>

</beans>
